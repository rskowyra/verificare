

host Client :
  skip
  skip
  skip

host Server :
  int x = 5
  int [ 2 , 4 ] x = 2
  array < int > ^ 4  a
  array < int > ^ 3  b
  array < int > ^ 2  c
  array < int > ^ 1  d
  array < int > e

  skip
  skip
  
  x := block network . end ( )  
  block network . end()
  x := 4

  for x in y:
    skip


  x := @ { y | y > 10 }
    
/*




network.end()
  loop:
    skip
    skip
    x := 10 + 3 + 2
    
    if 3 + 4 in e:
      skip
      skip

    select:
      x > 9:
        skip
        skip

      x <= 9:
        skip
        skip
        

      
  skip









  network.start(MO, REQUEST, CLIENT, SERVER)
  network.originate(MO, REQUEST, CLIENT, SERVER)
  network.end(MO, REQUEST, CLIENT, SERVER)


host Client 
  loop:
    skip
    skip
    x := 10
    if x + 34 == 2:
      network.originate(MO, REQUEST, CLIENT, SERVER)
      skip

host Server
  loop:
    skip
    skip
    if 1 == 2:
      skip
*/
